{{#extend "scss"}}
{{#content "sprites"}}
${{spritesheet_info.strings.name_sprites}}: {{#each sprites}}'.sprite-{{name}}',{{/each}};
${{spritesheet_info.strings.name}}: {{spritesheet.px.width}} {{spritesheet.px.height}} '{{{spritesheet.escaped_image}}}'{{#if retina_spritesheet}} '{{{retina_spritesheet.escaped_image}}}'{{/if}};

$forRetina: true;
$prefixForWebkit: true !default;
$prefixForMozilla: true !default;
$prefixForMicrosoft: true !default;
$prefixForOpera: true !default;
// opera从版本15开始转向webkit，所以默认为false，不输出o前缀
$prefixNo: true !default;

@mixin prefixer($property, $value, $prefixes: o webkit) {
  @each $prefix in $prefixes {
    @if $prefix == webkit and $prefixForWebkit == true {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz and $prefixForMozilla == true {
      -moz-#{$property}: $value;
    } @else if $prefix == ms and $prefixForMicrosoft == true {
      -ms-#{$property}: $value;
    } @else if $prefix == o and $prefixForOpera == true {
      -o-#{$property}: $value;
    }
  }
  @if $prefixNo {
    #{$property}: $value;
  }
}

{{#if retina_spritesheet}}
@mixin background-retina($image, $width, $height) {
  @if $forRetina {
    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6 / 2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
      // retina
      background-image: url($image);
      @include prefixer(background-size, #{$width} #{$height});
    }
  }
}
{{/if}}

#{$spritesheet-sprites} {
    background-image: url(nth($spritesheet, 3)+'?ver=&');
    {{#if retina_spritesheet}}
    // Retina图片
    @include background-retina(nth($spritesheet, 4)+'?ver=&', nth($spritesheet, 1), nth($spritesheet, 2));
    {{/if}}
}
{{/content}}

{{#content "spritesheet"}}{{/content}}
{{/extend}}

{{#sprites}}
.sprite-{{name}} {
    background-position: {{px.offset_x}} {{px.offset_y}};
    width: {{px.width}};
    height: {{px.height}};
}
{{/sprites}}